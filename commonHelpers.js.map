{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    compareDates(selectedDates[0]);\n  },\n};\nflatpickr('#datetime-picker', options);\n\nconst elements = {\n  button: document.querySelector('button[data-start]'),\n  day: document.querySelector('[ data-days]'),\n  hour: document.querySelector('[data-hours]'),\n  minute: document.querySelector('[data-minutes]'),\n  second: document.querySelector('[data-seconds]'),\n};\nlet userSelectedDate = 0;\n\nelements.button.classList.add('inactive');\nelements.button.addEventListener('click', handlerClick);\n\nfunction compareDates(selectedDate) {\n  const currentDate = new Date();\n  if (selectedDate < currentDate) {\n    alert('Please choose a date in the future');\n  } else {\n    userSelectedDate = selectedDate;\n    elements.button.classList.remove('inactive');\n  }\n}\n\nfunction handlerClick() {\n  elements.button.classList.add('inactive');\n  const countDown = setInterval(() => {\n    const now = new Date();\n    const timeRemaining = userSelectedDate - now;\n    console.log(timeRemaining);\n    if (timeRemaining <= 0) {\n      clearInterval(countDown);\n      alert('Time is up!');\n      return;\n    }\n    const timeComponents = convertMs(timeRemaining);\n    elements.day.textContent = timeComponents.days;\n    elements.hour.textContent = timeComponents.hours;\n    elements.minute.textContent = timeComponents.minutes;\n    elements.second.textContent = timeComponents.seconds;\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["options","selectedDates","compareDates","flatpickr","elements","userSelectedDate","handlerClick","selectedDate","countDown","timeRemaining","timeComponents","convertMs","ms","days","hours","minutes","seconds"],"mappings":"oGAGA,MAAMA,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBC,EAAaD,EAAc,CAAC,CAAC,CAC9B,CACH,EACAE,EAAU,mBAAoBH,CAAO,EAErC,MAAMI,EAAW,CACf,OAAQ,SAAS,cAAc,oBAAoB,EACnD,IAAK,SAAS,cAAc,cAAc,EAC1C,KAAM,SAAS,cAAc,cAAc,EAC3C,OAAQ,SAAS,cAAc,gBAAgB,EAC/C,OAAQ,SAAS,cAAc,gBAAgB,CACjD,EACA,IAAIC,EAAmB,EAEvBD,EAAS,OAAO,UAAU,IAAI,UAAU,EACxCA,EAAS,OAAO,iBAAiB,QAASE,CAAY,EAEtD,SAASJ,EAAaK,EAAc,CAE9BA,EADgB,IAAI,KAEtB,MAAM,oCAAoC,GAE1CF,EAAmBE,EACnBH,EAAS,OAAO,UAAU,OAAO,UAAU,EAE/C,CAEA,SAASE,GAAe,CACtBF,EAAS,OAAO,UAAU,IAAI,UAAU,EACxC,MAAMI,EAAY,YAAY,IAAM,CAElC,MAAMC,EAAgBJ,EADV,IAAI,KAGhB,GADA,QAAQ,IAAII,CAAa,EACrBA,GAAiB,EAAG,CACtB,cAAcD,CAAS,EACvB,MAAM,aAAa,EACnB,MACD,CACD,MAAME,EAAiBC,EAAUF,CAAa,EAC9CL,EAAS,IAAI,YAAcM,EAAe,KAC1CN,EAAS,KAAK,YAAcM,EAAe,MAC3CN,EAAS,OAAO,YAAcM,EAAe,QAC7CN,EAAS,OAAO,YAAcM,EAAe,OAC9C,EAAE,GAAI,CACT,CAEA,SAASC,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}